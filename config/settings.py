"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "dev-secret")
DEBUG = os.getenv("DJANGO_DEBUG", "True") == "True"
ALLOWED_HOSTS = ["*"]
RESEND_API_KEY = os.getenv("RESEND_API_KEY", "")
RESEND_FROM    = os.getenv("RESEND_FROM", "no-reply@niemr.app")
if not RESEND_API_KEY:
    raise RuntimeError("RESEND_API_KEY is required (Resend-only mode).")
EMAILS_WEBHOOK_SECRET = os.getenv("EMAILS_WEBHOOK_SECRET", "")  # optional Resend webhook signature secret
EMAILS_MAX_RETRIES = int(os.getenv("EMAILS_MAX_RETRIES", "6"))
EMAILS_RETRY_BACKOFF_SEC = int(os.getenv("EMAILS_RETRY_BACKOFF_SEC", "120"))
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "rest_framework",
    "core",
    "accounts",
    "facilities",
    "patients",
    "vitals",
    "encounters",
    "labs",
    "imaging",
    "pharmacy",
    "appointments",
    "billing",
    "attachments",
    "notifications",
    "providers",
    "audit",
    "emails",
    "reports",
    "drf_spectacular",
    "drf_spectacular_sidecar",
    "gunicorn",
]

AUTH_USER_MODEL = "accounts.User"


REPORTS_ENABLE_PDF = os.getenv("REPORTS_ENABLE_PDF", "1") in ("1","true","True")

# Optional: default brand info for headers/footers
REPORTS_BRAND = {
    "name": os.getenv("REPORTS_BRAND_NAME", "NIEMR"),
    "address": os.getenv("REPORTS_BRAND_ADDR", "123 Health St, Lagos"),
    "phone": os.getenv("REPORTS_BRAND_PHONE", "+234-800-000-0000"),
    "email": os.getenv("REPORTS_BRAND_EMAIL", "care@niemr.app"),
}

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.openapi.AutoSchema",
}

# REST_FRAMEWORK.update({
#     "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
# })

# SPECTACULAR_SETTINGS = {
#     "TITLE": "NIEMR API",
#     "DESCRIPTION": "Modern EMR backend for hospitals, providers, and patients.",
#     "VERSION": "1.0.0",
#     "SERVE_INCLUDE_SCHEMA": False,  # we'll expose /schema/ explicitly
#     "COMPONENT_SPLIT_REQUEST": True,
#     "SERVE_PERMISSIONS": [],  # Swagger/Redoc public; lock with IsAdminUser if needed
#     "SECURITY": [{"bearerAuth": []}],
#     "COMPONENTS": {
#         "securitySchemes": {
#             "bearerAuth": {
#                 "type": "http",
#                 "scheme": "bearer",
#                 "bearerFormat": "JWT",
#             }
#         }
#     },
#     # Optional: prettify operation IDs
#     "SCHEMA_PATH_PREFIX": r"/api",
#     "ENUM_NAME_OVERWRITE": True,
# }

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=int(os.getenv("ACCESS_TOKEN_LIFETIME_MIN", "30"))),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=int(os.getenv("REFRESH_TOKEN_LIFETIME_DAYS", "7"))),
    "AUTH_HEADER_TYPES": ("Bearer",),
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'audit.middleware.AuditRequestMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

EMAILS_PROVIDER = "RESEND"
# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = "Africa/Lagos"
USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
